
name: Tests on push

on:
  push:
    branches: 
      - main
      - dev

jobs:
  # check: 
  #   runs-on: ubuntu-latest
  #   outputs:
  #     isPr: ${{ steps.findPr.outputs.prOut.isPr }}
  #     prNumber: ${{ steps.findPr.outputs.number }}
  #   steps:
  #     - uses: actions/checkout@v1
  #       # Find the PR associated with this push, if there is one.

  #     - uses: jwalton/gh-find-current-pr@v1
  #       id: findPr
  #       with:
  #           # Can be "open", "closed", or "all".  Defaults to "open".
  #           state: open
  #       # This will echo "Your PR is 7", or be skipped if there is no current PR.
  #     - name: "Check if it is a PR"
  #       id: prOut
  #       run: echo "::set-output name=isPr::${{steps.findPr.outputs.number}}"
  test:
    # if: ${{ needs.check.isPr != ''}} #${{ github.event_name == 'pull_request'}}
    if: ${{ github.event_name != 'pull_request'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: "echo!"
        run: echo ${{needs.check.isPr}} ${{needs.check.prNumber}}
      - name: Event Name
        run: echo ${{github.event_name }}
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        # with:
        #   python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coverage coverage-badge pytest-cov
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -r app/requirements.txt
      - name: Lint with flake8
        id: linter
        run: flake8 . --count --max-complexity=10 --max-line-length=127 

      - name: Test with pytest
        id: tests
        run: | 
          pytest --cov=app --cov-fail-under=60